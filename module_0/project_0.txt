import numpy as np
number = np.random.randint(1,101)    # загадали число
print ("Загадано число от 1 до 100")


def game_core_v3(number):
    '''Сначала устанавливаем любое random число, а потом уменьшаем промежуток поиска в зависимости от того, 
    больше оно или меньше нужного. Функция принимает загаданное число и возвращает число попыток'''
    count = 1
    lower_bound = 1
    upper_bound = 100
    predict = np.random.randint(lower_bound,upper_bound + 1)
    
    while number != predict:
        count += 1
        if number > predict: # Если загаданное число больше предложенного,
            lower_bound = predict  # ограничиваем промежуток поиска снизу предложенным числом
        elif number < predict: 
            upper_bound = predict # Если загаданное число меньше предложенного,
        predict = np.random.randint(lower_bound,upper_bound + 1) # ограничиваем промежуток поиска верху предложенным 
    
    return(count) # выход из цикла, если угадали


def score_game(game_core):
    '''Запускаем игру 1000 раз, чтобы узнать, как быстро игра угадывает число'''
    count_ls = []
    np.random.seed(1)  # фиксируем RANDOM SEED, чтобы ваш эксперимент был воспроизводим!
    random_array = np.random.randint(1,101, size=(1000))
    
    for number in random_array:
        count_ls.append(game_core(number))
    score = int(np.mean(count_ls))
    print(f"Ваш алгоритм угадывает число в среднем за {score} попыток")
    
    return(score)


# Проверяем
score_game(game_core_v3)
